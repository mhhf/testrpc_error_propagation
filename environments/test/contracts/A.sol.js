// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"status","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"getBStatus","outputs":[{"name":"_status","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"shouldFail2","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"shouldFail","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"testGeneric","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"}],
    binary: "60606040526060607480610048833901809050604051809103906000f060008054600160a060020a0319169190911760a060020a60ff02191690556101e9806100bc6000396000f360606040526000805460ff19169055605a80601a6000396000f3606060405260e060020a6000350463200d2ed28114602e578063531a4559146039578063f15caff414603f575b005b605060005460ff1681565b602c6002565b602c6000805460ff19166001179055565b6060908152602090f3606060405260e060020a6000350463200d2ed281146100475780633226e80e1461005a5780636531add0146100bb578063678d22041461011d578063f15caff414610183575b005b6101d760005460a060020a900460ff1681565b6101d7600080547f200d2ed2000000000000000000000000000000000000000000000000000000006060908152600160a060020a039091169063200d2ed29060649060209060048187876161da5a03f1156100025750506040515191505090565b6100456000805460e060020a63531a4559026060908152600160a060020a039091169163531a4559916064919060048183876161da5a03f150506000805474ff0000000000000000000000000000000000000000191660a060020a1790555050565b6100456000805460e060020a63531a4559026060908152600160a060020a039091169163531a4559916064919060048183876161da5a03f1156100025750506000805474ff0000000000000000000000000000000000000000191660a060020a17905550565b610045600080547ff15caff4000000000000000000000000000000000000000000000000000000006060908152600160a060020a039091169163f15caff4916064919060048183876161da5a03f150505050565b60408051918252519081900360200190f3",
    unlinked_binary: "60606040526060607480610048833901809050604051809103906000f060008054600160a060020a0319169190911760a060020a60ff02191690556101e9806100bc6000396000f360606040526000805460ff19169055605a80601a6000396000f3606060405260e060020a6000350463200d2ed28114602e578063531a4559146039578063f15caff414603f575b005b605060005460ff1681565b602c6002565b602c6000805460ff19166001179055565b6060908152602090f3606060405260e060020a6000350463200d2ed281146100475780633226e80e1461005a5780636531add0146100bb578063678d22041461011d578063f15caff414610183575b005b6101d760005460a060020a900460ff1681565b6101d7600080547f200d2ed2000000000000000000000000000000000000000000000000000000006060908152600160a060020a039091169063200d2ed29060649060209060048187876161da5a03f1156100025750506040515191505090565b6100456000805460e060020a63531a4559026060908152600160a060020a039091169163531a4559916064919060048183876161da5a03f150506000805474ff0000000000000000000000000000000000000000191660a060020a1790555050565b6100456000805460e060020a63531a4559026060908152600160a060020a039091169163531a4559916064919060048183876161da5a03f1156100025750506000805474ff0000000000000000000000000000000000000000191660a060020a17905550565b610045600080547ff15caff4000000000000000000000000000000000000000000000000000000006060908152600160a060020a039091169163f15caff4916064919060048183876161da5a03f150505050565b60408051918252519081900360200190f3",
    address: "0x8b72cb9ef044030d20f99e7b877992f398f7f987",
    generated_with: "2.0.6",
    contract_name: "A"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("A error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("A error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("A error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("A error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.A = Contract;
  }

})();
